# Simple LightGBM test for Q-SHAP R package
# Basic functionality test similar to existing test files

library(lightgbm)

# Create simple test data
set.seed(123)
n <- 100
p <- 5
X <- matrix(rnorm(n * p), nrow = n, ncol = p)
colnames(X) <- paste0("X", 1:p)
y <- X[,1] + 0.5 * X[,2] + rnorm(n, 0, 0.1)

# Create LightGBM dataset
dtrain <- lgb.Dataset(data = X, label = y)

# Simple parameters for regression
params <- list(
  objective = "regression",
  metric = "rmse",
  num_leaves = 15,
  learning_rate = 0.1,
  verbose = -1
)

# Train model
lgb_model <- lgb.train(
  params = params,
  data = dtrain,
  nrounds = 20,
  verbose = -1
)

# Test tree structure extraction
print("Testing lgb_formatter...")
max_depth <- 6
lgb_trees <- lgb_formatter(lgb_model, max_depth)
print(paste("Number of trees extracted:", length(lgb_trees)))
print(paste("First tree node count:", lgb_trees[[1]]$node_count))

# Test SHAP model creation
print("Testing lgb_shap...")
lgb_shap_models <- lgb_shap(lgb_trees)
print(paste("Number of SHAP models created:", length(lgb_shap_models)))

# Test explainer creation
print("Testing create_tree_explainer...")
explainer <- create_tree_explainer(lgb_model)
print(paste("Explainer model type:", explainer$model_type))
print(paste("Explainer max depth:", explainer$max_depth))

# Test loss calculation on small subset
print("Testing qshap_loss...")
X_test <- X[1:5, ]
y_test <- y[1:5]
loss <- qshap_loss(explainer, X_test, y_test)
print(paste("Loss matrix dimensions:", paste(dim(loss), collapse = " x ")))

# Test R-squared calculation
print("Testing qshap_rsq...")
rsq <- qshap_rsq(explainer, X_test, y_test)
print(paste("R-squared values:", paste(round(rsq, 4), collapse = ", ")))

print("Simple LightGBM test completed successfully!")
